#ORACLE DB
----------------------------------------------
#Criando uma PK e FK

	CREATE TABLE BANCO_DADOS (
	    ID_BANCO_DADOS INT PRIMARY KEY NOT NULL,
	    CPF CHAR(11) UNIQUE NOT NULL,
	    NOME VARCHAR2(255) DEFAULT 'USUARIO' NOT NULL,
	    ANIVERSARIO DATE NULL    
	    --CONSTRAINT PK_ID_BANCO_DADOS PRIMARY KEY (ID_BANCO_DADOS);
	    --o id pode ser feito dessa forma tambem 
	);

	CREATE TABLE BANCO_DADOS_DOIS (
		ID_BANCO_DADOS_2 INT PRIMARY KEY NOT NULL,
		ID_BANCO_DADOS INT NOT NULL,
		NOME VARCHAR2(255) DEFAULT 'USUARIO' NOT NULL,
		CONSTRAINT FK_ID_BANCO_DADOS FOREIGN KEY (ID_BANCO_DADOS) REFERENCES BANCO_DADOS(ID_BANCO_DADOS)
	);

	ALTER TABLE BANCO_DADOS_DOIS
		ADD ENDERECO VARCHAR2(255) NOT NULL;

	DROP TABLE BANCO_DADOS_DOIS;

	CREATE SEQUENCE BANCO_DADOS_seq
		START WITH 1
		--MAXVALUE 100
		INCREMENT BY 1
		NOCYCLE;

#CRUD

#create
	INSERT INTO BANCO_DADOS
		(ID_BANCO_DADOS, CPF, NOME) 
	VALUES
		(BANCO_DADOS_seq.NEXTVAL, '00077755599', 'TESTE1');

#read
	SELECT * 
		FROM BANCO_DADOS;

	SELECT ID_BANCO_DADOS AS ID, CPF, NOME 
		FROM BANCO_DADOS;

	SELECT 1 
		FROM BANCO_DADOS;

	SELECT COUNT(1) AS CONT 
		FROM BANCO_DADOS;

#update
	UPDATE BANCO_DADOS 
		SET NOME ='TESTE1 UPDATE'
		WHERE NOME = 'TESTE1';
-- <> < > = ISNULL ISNOTNULL IN NOT LIKE

	DELETE BANCO_DADOS
		WHERE NOME = 'TESTE3';

	SELECT *
		FROM BANCO_DADOS BD --alias com AS implicito
		INNER JOIN BANCO_DADOS_DOIS BD2 --alias com AS implicito
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS;

	INSERT INTO BANCO_DADOS_DOIS
			(ID_BANCO_DADOS_2, ID_BANCO_DADOS, NOME, ENDERECO)
		VALUES
			(BANCO_DADOS_DOIS_SEQ.NEXTVAL, 1, 'TESTE BANCO DOIS', 'QUALQUER');

	SELECT BD.ID_BANCO_DADOS,
			CPF,
			BD.NOME,
			ID_BANCO_DADOS_2,
			BD2.NOME AS NOMEBD2,
			ENDERECO
		FROM BANCO_DADOS BD
		INNER JOIN BANCO_DADOS_DOIS BD2
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS
				-- AND BD.ID_BANCO_DADOS > 1;
				-- or BD.ID_BANCO_DADOS > 1;
		WHERE BD.NOME = 'TESTE';

	SELECT BD.ID_BANCO_DADOS,
			CPF,
			BD.NOME,
			ID_BANCO_DADOS_2,
			BD2.NOME AS NOMEBD2,
			ENDERECO
		FROM BANCO_DADOS BD
		LEFT JOIN BANCO_DADOS_DOIS BD2
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS
		WHERE BD.NOME = 'TESTE';

	SELECT BD.ID_BANCO_DADOS,
			CPF,
			BD.NOME,
			ID_BANCO_DADOS_2,
			BD2.NOME AS NOMEBD2,
			ENDERECO
		FROM BANCO_DADOS BD
		RIGHT JOIN BANCO_DADOS_DOIS BD2
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS
		WHERE BD.NOME = 'TESTE';

	SELECT BD.ID_BANCO_DADOS,
			CPF,
			BD.NOME,
			ID_BANCO_DADOS_2,
			BD2.NOME AS NOMEBD2,
			ENDERECO
		FROM BANCO_DADOS BD
		FULL JOIN BANCO_DADOS_DOIS BD2
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS
		WHERE BD.NOME = 'TESTE';

	SELECT DISTINCT BD.ID_BANCO_DADOS,
			CPF,
			BD.NOME,
			ID_BANCO_DADOS_2,
			BD2.NOME AS NOMEBD2,
			ENDERECO
		FROM BANCO_DADOS BD
		CROSS JOIN BANCO_DADOS_DOIS BD2
			ON BD.ID_BANCO_DADOS = BD2.ID_BANCO_DADOS
		WHERE BD.NOME = 'TESTE';

	ALTER TABLE BANCO_DADOS_DOIS
    	DROP CONSTRAINT SYS_C006992;

    SELECT BD.ID_BANCO_DADOS,
    		CPF,
    		BD.NOME
    	FROM BANCO_DADOS BD
    	UNION
    	SELECT ID_BANCO_DADOS_2,
    			BD2.NOME AS NOMEBD2,
    			ENDERECO
    	FROM BANCO_DADOS_DOIS BD2;

    SELECT *
    	FROM BANCO_DADOS
    	WHERE ID_BANCO_DADOS IN (1);

    SELECT *
    	FROM BANCO_DADOS
    	WHERE ID_BANCO_DADOS NOT IN (1, 3);

    SELECT *
    	FROM BANCO_DADOS;
    	WHERE NOME LIKE 'TESTE%';

    SELECT *
    	FROM BANCO_DADOS
    	WHERE NOME IS NULL; --ou ISNOT NULL

